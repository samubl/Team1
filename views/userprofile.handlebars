<html>
<head>
	<title>User Profile</title>
	{{> googleanalytics}}
	{{> header}}
	<!-- Linked css files -->
    <link href="/css/userprofile.css" rel="stylesheet">
</head>
<body>
	<!-- bootstrap container for page content -->
	<div class="container">
		<!-- Back Button, Username -->
		<div class="backandname">
			<h1>{{username}}</h1>
		</div>	
		<div class="spacer"></div>
		<div class="picandlinks">
			<!-- Profile Picture -->
			<div class="pic-container">
				<a><img src="{{picture}}"></a>
				<!-- Add a way to change it -->
			</div>
			<div class="sub">
				<!-- Links to Stats and Favorites user pages. Need to add link to Stats page and fill those pages -->
				<h3><a href="/Statistics" id="statslink">Statistics </a><span class="glyphicon glyphicon-stats"></span></h3><hr>
				<h3><a href="/Favorites/page_A" id="favslink">Favorites </a><span class="glyphicon glyphicon-heart"></span></h3><hr>
			</div>
		</div>
		<!-- At a Glance Table -->
		<div class="glance">
			<ul>
				<li><h3>At a Glance</h3></li><br>
				<!-- Top 3 Genres -->
				<li><ul class="topsongs">
					<li>Top 3 Favorite Songs the last 2 weeks:</li>
					{{#with statistics}}
						{{#each genres}}
							<a><li class="genre">{{lastsong}}</li></a>
						{{/each}}
					{{/with}}
				</ul></li><br>
				<!-- Last Listened to Song and from where -->
				<li><ul class="lastlistened">
					<li>Last Listened to:</li>
					<div id="lastlistenedsong">
						<li><a href="{{songlink}}" id="lastsong">{{song}}</a> by <a href="{{artistlink}}" id="lastartist">{{artist}}</a></li>
						<li>From <a href="{{sourcelink}}" id="lastsource">{{source}}</a></li>
					</div>
				</ul></li>
				<!-- Linked Music Accounts, Add Button -->
				<div id="linkedaccounts" style="display: none">
					<li><ul>
						<li><h7 class="linked">Linked Accounts: </h7></li>
						<li><a href="">Spotify</a></li>
					</ul></li>
				</div>
			</ul>
			<!-- Where user will enter their source information -->
			<div class="sourceops">
				<form>
					<!-- Enter username: <input type="text" id="Enter username"><br>
					<input type="submit" id="submittedusername"><br> -->
        			<a href="/connect" class="btn btn-primary" id="ConnectSpotify">Connect Spotify</a>
                </form>
			</div>
		</div>
		<div class="logout">
			<h4><a href='/'>Log out</a></h4>
		</div>
		<!-- Navbar Section -->
		<ul class="navbar">
			<li><a href="/userprofile" class="active">Account</a></li>
			<li><a href='/Friends'>Friends</a></li>
			<li><a href="/Statistics">Statistics</a></li>
			<li><a href='/Favorites/page_A'>Favorites</a></li>
		</ul>
	</div>

	<!-- connected javascript files -->
	{{> footer}}
	<script>
		function goBack(){
			window.history.back();
		}
	</script>
	<script>
		(function() {

			//TODO Samuel: Favorite (long term) Song instead of genres. Stretch goal: Favorites short-term and medium-term song

			/**
			* Obtains parameters from the hash of the URL
			* @return Object
			*/
			function getHashParams() {
				var hashParams = {};
				var e, r = /([^&;=]+)=?([^&;]*)/g,
					q = window.location.hash.substring(1);
				while ( e = r.exec(q)) {
					hashParams[e[1]] = decodeURIComponent(e[2]);
				}
				return hashParams;
			}
			/** 
			 * Calls Spotify API to get current users profile
			 */
			function getUserProfile(access_token) {
				$('.backandname h1').hide();
				$('.pic-container').hide();
				$.ajax({
					url: 'https://api.spotify.com/v1/me',
					headers: {
					'Authorization': 'Bearer ' + access_token
					},
					success: function(response) {
						console.log(response);
						//update the username, picture, linked account, and stats and favorites links
						$('.backandname h1').text(response.id);
						$('.backandname h1').show();
						$('.pic-container a img').attr("src", response.images[0].url);
						$('.pic-container').show();
						$("#linkedaccounts li a").attr("href", response.external_urls.spotify);
						$("#linkedaccounts").show();
						$("#ConnectSpotify").hide();
					}
				});
			}
			/** 
			 * Calls Spotify API to get current users recently listened to track
			 */
			function getRecentlyListened(access_token) {
				$.ajax({
					url: 'https://api.spotify.com/v1/me/player/recently-played?limit=1',
					headers: {
					'Authorization': 'Bearer ' + access_token
					},
					success: function(response) {
						console.log(response);
						//last song
						$("#lastsong").attr("href", response.items[0].track.external_urls.spotify);
						$("#lastsong").text(response.items[0].track.name);
						//last artist
						$("#lastartist").attr("href", response.items[0].track.artists[0].external_urls.spotify);
						$("#lastartist").text(response.items[0].track.artists[0].name);
						//last source
						$("#lastsource").attr("href", "https://www.spotify.com/us/");
						$("#lastsource").text("Spotify");
						$("#lastlistenedsong").show();
					}
				});
			}

			/**
			 * Calls Spotify API to get the Top 3 favorite songs of the last 2 weeks
			 */
			function getRecentTopSongs(access_token) {
				$.ajax({
					url: 'https://api.spotify.com/v1/me/top/tracks?time_range=short_term&limit=3',
					headers: {
					'Authorization': 'Bearer ' + access_token
					},
					success: function(response) {
						console.log(response);
						var song1 = response.items[0].name;
						var song1link = response.items[0].external_urls.spotify;
						var song2 = response.items[1].name;
						var song2link = response.items[1].external_urls.spotify;
						var song3 = response.items[2].name;
						var song3link = response.items[2].external_urls.spotify;
						var favsongs = '<li>Top 3 Favorite Songs the last 2 weeks:</li><br>' + 
							'<li class="favsong"><a href="' + song1link + '">' + song1 + ' </a></li><br>' +
							'<li class="favsong"><a href="' + song2link + '">' + song2 + ' </a></li><br>' +
							'<li class="favsong"><a href="' + song3link + '">' + song3 + ' </a></li>';
						$(".topsongs").html(favsongs);
					}
				});
			}

			var params = getHashParams();

			var access_token = params.access_token,
				refresh_token = params.refresh_token,
				error = params.error;

			//only reset the local storage the first time
			if (localStorage.getItem("access_token") === 'undefined' || localStorage.getItem("access_token") === null) {
				localStorage.setItem("access_token", access_token);
			}

			access_token = localStorage.getItem("access_token");
			
			console.log(access_token);
			console.log(refresh_token);
			console.log(localStorage.getItem("access_token"));
			if (error) {
				alert('There was an error during the authentication');
			} 
			else {
				//$('#submittedusername').on("click", addSource);
				// $('#colorBtn').click(randomizeColors);
				if (access_token != null && access_token != 'undefined') {
					// render oauth info
					//oauthPlaceholder.innerHTML = oauthTemplate({
					//access_token: access_token,
					//refresh_token: refresh_token
					//});

					//Calls Spotify API to get current users profile
					getUserProfile(access_token);
					//Calls Spotify API to get current users recently listened to track
					getRecentlyListened(access_token);
					//Calls Spotify API to get the top 3 songs listened to the last 2 weeks
					getRecentTopSongs(access_token);
				} 
				else {
					// render initial screen
					console.log("No access token");
					$('.topsongs a').hide();
					$("#linkedaccounts").hide();
					$("#lastlistenedsong").hide();
					$("#ConnectSpotify").show();
				}
			}
		})();
	</script>
</body>
</html>
